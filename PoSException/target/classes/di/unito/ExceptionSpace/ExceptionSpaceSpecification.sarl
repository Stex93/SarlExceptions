package di.unito.ExceptionSpace

import io.sarl.lang.core.SpaceSpecification
import io.sarl.lang.core.SpaceID
import com.google.inject.Injector
import io.sarl.core.OpenEventSpace
import io.sarl.sre.services.logging.LoggingService
import io.sarl.sre.spaces.SpaceParticipantListenerFactory
import com.google.inject.Inject
import io.sarl.sre.KernelScope
import com.google.inject.name.Named

class ExceptionSpaceSpecification implements SpaceSpecification<ExceptionSpace> {

	@Inject
	var injector : Injector

	@Inject
	var loggingService : LoggingService

	@Inject
	@KernelScope
	var spaceParticipantListenerFactory : SpaceParticipantListenerFactory

	@Inject
	@Named("defaultSpace")
	var defaultSpace : OpenEventSpace

	def create(id : SpaceID, params : Object*) : ExceptionSpace {
		val logger = this.loggingService.getKernelLogger
		val listener = this.spaceParticipantListenerFactory.create(this.defaultSpace, logger)
		val ^space = new ExceptionSpaceImpl(id, listener, this.loggingService)
		listener.defaultSpace = ^space
		this.injector.injectMembers(^space)
		return ^space
	}

}
